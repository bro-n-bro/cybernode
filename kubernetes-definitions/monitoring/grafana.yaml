# Datasource ConfigMap for Grafana Watcher
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  prometheus.yaml: |+
    apiVersion: 1
    datasources:
     - name: PROMETHEUS
       type: prometheus
       access: proxy
       org_id: 1
       url: http://prometheus.monitoring.svc:9090
       version: 1
       editable: true
---
# Dashboard Provider ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-providers
  namespace: monitoring
data:
  dashboards.yaml: |+
    apiVersion: 1

    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      options:
        path: /grafana-dashboards-common
    - name: 'chains'
      orgId: 1
      folder: 'Chains'
      type: file
      options:
        path: /grafana-dashboards-chains
    - name: 'exchanges'
      orgId: 1
      folder: 'Exchanges'
      type: file
      options:
        path: /grafana-dashboards-exchanges
    - name: 'cluster'
      orgId: 1
      folder: 'Cluster Overall'
      type: file
      options:
        path: /grafana-dashboards-cluster
---

# Grafana Data Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---

# Grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
      namespace: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:5.1.4
        env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_NAME
          value: "Main Org."
        - name: GF_AUTH_ANONYMOUS_ROLE
          value: "Viewer"
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-providers
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards-common
          mountPath: /grafana-dashboards-common
        - name: grafana-dashboards-chains
          mountPath: /grafana-dashboards-chains
        - name: grafana-dashboards-exchanges
          mountPath: /grafana-dashboards-exchanges
        - name: grafana-dashboards-cluster
          mountPath: /grafana-dashboards-cluster
        - name: grafana-data
          mountPath: /var/lib/grafana
        ports:
        - name: web
          containerPort: 3000
        resources:
          requests:
            memory: "300Mi"
            cpu: "0.1"
          limits:
            memory: "500Mi"
            cpu: "0.3"
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-providers
        configMap:
          name: grafana-dashboards-providers
      - name: grafana-dashboards-common
        configMap:
          name: grafana-dashboards-common
      - name: grafana-dashboards-chains
        configMap:
          name: grafana-dashboards-chains
      - name: grafana-dashboards-exchanges
        configMap:
          name: grafana-dashboards-exchanges
      - name: grafana-dashboards-cluster
        configMap:
          name: grafana-dashboards-cluster
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-data
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: LoadBalancer
  ports:
  - name: "web"
    port: 80
    targetPort: 3000
  selector:
    app: grafana